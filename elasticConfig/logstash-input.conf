# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
    jdbc {
      jdbc_driver_library => "C:/Libraries/mysql-connector-java-8.0.20.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://localhost:3306/capstone?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul"
      jdbc_user => "root"
      jdbc_password => "gozldgkwlak1!"
      statement => "SELECT *, UNIX_TIMESTAMP(modified_time) AS unix_ts_in_secs FROM cert WHERE (UNIX_TIMESTAMP(modified_time) > :sql_last_value AND modified_time < NOW()) ORDER BY modified_time ASC"
      use_column_value => true
      tracking_column => modified_time
      tracking_column_type => "numeric"
      schedule => "*/5 * * * * *" # Query주기 설정
      type => "cert"
    }
    jdbc {
      jdbc_driver_library => "C:/Libraries/mysql-connector-java-8.0.20.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://localhost:3306/capstone?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul"
      jdbc_user => "root"
      jdbc_password => "gozldgkwlak1!"
      statement => "SELECT *, UNIX_TIMESTAMP(modified_time) AS unix_ts_in_secs FROM date WHERE (UNIX_TIMESTAMP(modified_time) > :sql_last_value AND modified_time < NOW()) ORDER BY modified_time ASC"
      use_column_value => true
      tracking_column => modified_time
      tracking_column_type => "numeric"
      schedule => "*/5 * * * * *" # Query주기 설정
      type => "date"
    }
    jdbc {
      jdbc_driver_library => "C:/Libraries/mysql-connector-java-8.0.20.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://localhost:3306/capstone?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul"
      jdbc_user => "root"
      jdbc_password => "gozldgkwlak1!"
      statement => "SELECT *, UNIX_TIMESTAMP(modified_time) AS unix_ts_in_secs FROM view_count WHERE (UNIX_TIMESTAMP(modified_time) > :sql_last_value AND modified_time < NOW()) ORDER BY modified_time ASC"
      use_column_value => true
      tracking_column => modified_time
      tracking_column_type => "numeric"
      schedule => "*/5 * * * * *" # Query주기 설정
      type => "view_count"
    }
    jdbc {
      jdbc_driver_library => "C:/Libraries/mysql-connector-java-8.0.20.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://localhost:3306/capstone?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul"
      jdbc_user => "root"
      jdbc_password => "gozldgkwlak1!"
      statement => "SELECT *, UNIX_TIMESTAMP(modified_time) AS unix_ts_in_secs FROM user WHERE (UNIX_TIMESTAMP(modified_time) > :sql_last_value AND modified_time < NOW()) ORDER BY modified_time ASC"
      use_column_value => true
      tracking_column => modified_time
      tracking_column_type => "numeric"
      schedule => "*/5 * * * * *" # Query주기 설정
      type => "user"
    }
}

filter {
  mutate {
    copy => { "id" => "[@metadata][_id]"}
    remove_field => ["@version", "unix_ts_in_secs"]
  }
  ruby{ 
    code => "event.set('@timestamp', LogStash::Timestamp.new(event.get('@timestamp')+(9*60*60)))" 
  }
}

output {
  if[type] == "cert" {
     elasticsearch {
          hosts => ["http://localhost:9200"]
          index => "certindex"
          document_type => "cert"
          document_id => "%{[@metadata][_id]}"
     }
  }
  if[type] == "date"{
     elasticsearch {
          hosts => ["http://localhost:9200"]
          index => "dateindex"
          document_type => "date"
          document_id => "%{[@metadata][_id]}"
     }
  }
  if[type] == "view_count"{
     elasticsearch {
          hosts => ["http://localhost:9200"]
          index => "viewindex"
          document_type => "view_count"
          document_id => "%{[@metadata][_id]}"
     }
  }
  if[type] == "user"{
     elasticsearch {
          hosts => ["http://localhost:9200"]
          index => "userindex"
          document_type => "user"
          document_id => "%{[@metadata][_id]}"
     }
  }
}